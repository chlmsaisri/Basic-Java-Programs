//Count the number of triplets in an array where the sum of two elements equals the third element.

--------------------        1          -------------

class Solution {
    int countTriplet(int arr[], int n) {
        int index[] = new int[100001]; // Increase size to 100001 for 1-based indexing
        
        int count = 0;

        for (int i = 0; i < n; i++) {
            index[arr[i]] = 1;
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                if (index[arr[i] + arr[j]] == 1) {
                    count++;
                }
            }
        }

        return count;
    }
}



---------------        2         -----------------

import java.util.HashSet;

class Solution {
    int countTriplet(int arr[], int n) {
        int count = 0;

        // Create a hash set to store the array elements
        HashSet<Integer> set = new HashSet<>();
        for (int num : arr) {
            set.add(num);
        }

        // Check for each pair of elements (a, b) if (a + b) exists in the set
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                int sum = arr[i] + arr[j];
                if (set.contains(sum)) {
                    count++;
                }
            }
        }

        return count;
    }
}



-------------------        3              ---------------

class Solution {
    int countTriplet(int arr[], int n) {
        int count = 0;

        // Sort the array in ascending order
        Arrays.sort(arr);

        for (int i = n - 1; i >= 0; i--) {
            int left = 0;
            int right = i - 1;

            while (left < right) {
                int sum = arr[left] + arr[right];

                if (sum == arr[i]) {
                    count++;
                    left++;
                    right--;
                } else if (sum < arr[i]) {
                    left++;
                } else {
                    right--;
                }
            }
        }

        return count;
    }
}
