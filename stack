public class Stack {
    private int maxSize; // maximum size of the stack
    private int top; // index of the top element
    private int[] stackArray; // array to store stack elements

    // Constructor to initialize the stack
    public Stack(int size) {
        maxSize = size;
        stackArray = new int[maxSize];
        top = -1; // stack is initially empty
    }

    // Push an element onto the stack
    public void push(int value) {
        if (top == maxSize - 1) {
            System.out.println("Stack overflow");
            return;
        }
        stackArray[++top] = value;
    }

    // Pop the top element from the stack
    public int pop() {
        if (top == -1) {
            System.out.println("Stack underflow");
            return -1; // Return a sentinel value or handle the underflow case appropriately
        }
        return stackArray[top--];
    }

    // Check if the stack is empty
    public boolean isEmpty() {
        return (top == -1);
    }

    // Check if the stack is full
    public boolean isFull() {
        return (top == maxSize - 1);
    }

    // Get the top element of the stack without removing it
    public int peek() {
        if (top == -1) {
            System.out.println("Stack is empty");
            return -1; // Return a sentinel value or handle the empty stack case appropriately
        }
        return stackArray[top];
    }

    // Get the size of the stack
    public int size() {
        return top + 1;
    }

    // Print the elements of the stack
    public void display() {
        if (top == -1) {
            System.out.println("Stack is empty");
            return;
        }
        System.out.print("Stack: ");
        for (int i = top; i >= 0; i--) {
            System.out.print(stackArray[i] + " ");
        }
        System.out.println();
    }

    public static void main(String[] args) {
        Stack stack = new Stack(5);
        stack.push(1);
        stack.push(2);
        stack.push(3);
        stack.display(); // Stack: 3 2 1

        int poppedElement = stack.pop();
        System.out.println("Popped element: " + poppedElement); // Popped element: 3

        System.out.println("Top element: " + stack.peek()); // Top element: 2

        System.out.println("Stack size: " + stack.size()); // Stack size: 2

        stack.display(); // Stack: 2 1
    }
}
