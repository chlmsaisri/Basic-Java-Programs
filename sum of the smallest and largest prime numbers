int sumPrime(int n, int m) {
    int answer = 0;

    // Loop through the range from n to m (inclusive)
    for (int i = n; i <= m; i++) {
        int c = 0;
        // Check if the number i is prime
        for (int j = 2; j <= sqrt(i); j++) {
            if (i % j == 0) {
                c++;                 // If i has a factor (j), increment the count c
                break;                           // Optimization: If we find a factor, we can stop checking.
            }
        }
        // If c remains 0, it means the number i is prime
        if (c == 0) {
            answer += i;                     // Add the prime number i to the answer
        }
    }

    // Loop through the range from m to n (inclusive), in reverse order
    for (int i = m; i >= n; i--) {
        int c = 0;
        // Check if the number i is prime
        for (int j = 2; j <= sqrt(i); j++) {
            if (i % j == 0) {
                c++;                // If i has a factor (j), increment the count c
                break;              // Optimization: If we find a factor, we can stop checking.
            }
        }
        // If c remains 0, it means the number i is prime
        if (c == 0) {
            answer += i;                   // Add the prime number i to the answer
        }
    }

    return answer;                 // Return the sum of the smallest and largest prime numbers found in the range.
}
