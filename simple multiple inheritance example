
interface Father {
    void fatherMethod();
}


interface Mother {
    void motherMethod();
}


class Child1 implements Father {
    @Override
    public void fatherMethod() {
        System.out.println("Child1's implementation of fatherMethod");
    }
    
    void child1Method() {
        System.out.println("Child1's own method");
    }
}


class Child2 implements Mother {
    @Override
    public void motherMethod() {
        System.out.println("Child2's implementation of motherMethod");
    }
    
    void child2Method() {
        System.out.println("Child2's own method");
    }
}

// Child3 class implementing both Father and Mother interfaces
class Child3 implements Father, Mother {
    @Override
    public void fatherMethod() {
        System.out.println("Child3's implementation of fatherMethod");
    }
    
    @Override
    public void motherMethod() {
        System.out.println("Child3's implementation of motherMethod");
    }
    
    void child3Method() {
        System.out.println("Child3's own method");
    }
}

public class Main {
    public static void main(String[] args) {
        Child1 c1 = new Child1();
        Child2 c2 = new Child2();
        Child3 c3 = new Child3();
        
        c1.fatherMethod();
        c1.child1Method();
        
        c2.motherMethod();
        c2.child2Method();
        
        c3.fatherMethod();
        c3.motherMethod();
        c3.child3Method();
    }
}
