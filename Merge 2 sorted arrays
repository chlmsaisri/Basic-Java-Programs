public static void merge(long arr1[], long arr2[], int n, int m) {
    // Shift elements in arr1 to the beginning
    for (int i = n - 1; i >= 0; i--) {
        arr1[i + m] = arr1[i];
    }

    int i = m; // Index of first element in arr1
    int j = 0; // Index of first element in arr2
    int k = 0; // Index of position in arr1 after merging

    while (i < n + m && j < m) {
        if (arr1[i] <= arr2[j]) {
            arr1[k++] = arr1[i++];
        } else {
            arr1[k++] = arr2[j++];
        }
    }

    while (j < m) {
        arr1[k++] = arr2[j++];
    }
}









-----------------------------------------------------------

public static void merge(long arr1[], long arr2[], int n, int m) {
    long b[] = new long[n + m];
    int i = 0, j = 0, k = 0;

    while (i < n && j < m) {
        if (arr1[i] >= arr2[j]) {
            b[k] = arr2[j];
            j++;
        } else {
            b[k] = arr1[i];
            i++;
        }
        k++;
    }

    while (i < n) {
        b[k] = arr1[i];
        i++;
        k++;
    }

    while (j < m) {
        b[k] = arr2[j];
        j++;
        k++;
    }

    for (i = 0; i < n; i++) {
        arr1[i] = b[i];
    }

    for (j = 0; j < m; j++) {
        arr2[j] = b[j + n];
    }
}
